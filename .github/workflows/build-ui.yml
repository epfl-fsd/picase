name: UI CI Pipeline
on:
    push:
        paths:
            - 'ui/**'

env:
    REGISTRY: ghcr.io
    REPOSITORY: epfl-fsd/picase

jobs:
    get-release-info:
        runs-on: ubuntu-latest
        outputs:
            version: ${{ steps.get_version.outputs.version }}
            name: ${{ steps.get_name.outputs.name }}
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Get Version from ui/package.json
              id: get_version
              run: |
                  version=$(jq -r .version ui/package.json)
                  echo "Version from ui/package.json: $version"
                  echo "version=$version" >> $GITHUB_OUTPUT

            - name: Get Name from ui/package.json
              id: get_name
              run: |
                  name=$(jq -r .name ui/package.json)
                  echo "Name from ui/package.json: $name"
                  echo "name=$name" >> $GITHUB_OUTPUT

    build:
        needs: get-release-info
        runs-on: ubuntu-latest
        strategy:
            matrix:
                platform: [linux/amd64, linux/arm64/v8]
        permissions:
            contents: read
            packages: write
        env:
            BUILD_ENV: production

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3
              with:
                  install: true

            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3

            - name: Log into registry ${{ env.REGISTRY }}
              uses: docker/login-action@v3
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Extract Docker metadata
              id: meta
              uses: docker/metadata-action@v5
              with:
                  images: ${{ env.REGISTRY }}/${{ env.REPOSITORY }}/${{ needs.get-release-info.outputs.name }}
                  tags: |
                      latest
                      ${{ needs.get-release-info.outputs.version }}

            - name: Build and push Production Docker image
              uses: docker/build-push-action@v5
              with:
                  context: ./ui
                  push: true
                  platforms: ${{ matrix.platform }}
                  tags: ${{ env.REGISTRY }}/${{ env.REPOSITORY }}/${{ needs.get-release-info.outputs.name }}:latest,${{ env.REGISTRY }}/${{ env.REPOSITORY }}/${{ needs.get-release-info.outputs.name }}:${{ needs.get-release-info.outputs.version }}
                  labels: ${{ steps.meta.outputs.labels }}
                  cache-from: type=gha
                  cache-to: type=gha,mode=max
