---
- name: Include vars
  ansible.builtin.include_vars: vars.yml

- name: Update package cache
  ansible.builtin.apt:
      update_cache: yes
      cache_valid_time: 3600

- name: Install essential packages
  ansible.builtin.apt:
      package:
          - bash
          - curl
          - git
          - gnupg2
          - software-properties-common
          - apt-transport-https
          - ca-certificates
          - unzip
          - nfs-common
          - iptables
          - open-iscsi

- name: Set timezone
  community.general.timezone:
      name: UTC

- name: Make sure we have a 'admin' group
  ansible.builtin.group:
      name: admin
      state: present

- name: Create Users
  ansible.builtin.user:
      name: '{{ item.username }}'
      groups:
          - admin
      shell: /bin/bash
  loop: '{{ _secrets.users }}'

- name: Set authorized keys
  ansible.posix.authorized_key:
      user: '{{ item.username }}'
      state: present
      key: 'https://github.com/{{ item.github }}.keys'
  loop: '{{ _secrets.users }}'

- name: Ensure cgroup settings are in /boot/firmware/cmdline.txt
  ansible.builtin.lineinfile:
      path: /boot/firmware/cmdline.txt
      regexp: '^((?!.*\bcgroup_enable=memory cgroup_memory=1\b).*)$'
      line: '\1 cgroup_enable=memory cgroup_memory=1'
      backrefs: yes
  register: cgroups

- name: Disable swap at runtime
  ansible.builtin.command: swapoff -a
  when: ansible_swaptotal_mb > 0

- name: Disable swap permanently
  ansible.builtin.lineinfile:
      path: /etc/fstab
      regexp: '^([^#].*\sswap\s+sw\s+.*)$'
      line: '# \1'
      backrefs: yes

- name: Set hostname
  ansible.builtin.hostname:
      name: '{{ node_name }}'

- name: Ensure br_netfilter module is loaded
  ansible.builtin.modprobe:
      name: br_netfilter
      state: present

- name: Persist br_netfilter module across reboots
  ansible.builtin.lineinfile:
      path: /etc/modules-load.d/br_netfilter.conf
      line: br_netfilter
      create: yes

- name: Configure sysctl for networking
  ansible.builtin.sysctl:
      name: '{{ item }}'
      value: '1'
      state: present
      reload: yes
  with_items:
      - net.ipv4.ip_forward
      - net.bridge.bridge-nf-call-iptables

- name: Reboot node if cgroups were modified
  ansible.builtin.reboot:
      reboot_timeout: 300
  when: cgroups.changed
